(function(){var templates;templates={container:'<form>\n  <div class="container">\n\n<div ng-if="definition.title || definition.description" class="row">\n  <h3 ng-if="definition.title">{{ definition.title }}</h3>\n  <div ng-if="definition.description" class="well well-sm">{{ definition.description }}</div>\n</div>\n\n<div ng-repeat="page in definition.pages">\n  \n  <div ng-if="page.title || page.description" class="row">\n\t<h4 ng-if="page.title" class="text-primary">{{ page.title }}</h4>\n\t<div ng-if="page.description">{{ page.description }}</div>\n  </div>\n\n  <div class="row" ng-repeat="line in page.lines">\n\t<coolform-header ng-if="line.header" header="line.header"></coolform-header>\n\t<coolform-line ng-if="line.fields" fields="line.fields"></coolform-line>\n  </div>\n\n</div>\n\n<div class="row">\n  <coolform-submit definition="definition"></coolform-submit>\n</div>\n\n  </div>\n</form>',
controller:'<div>\n  <div ng-if="!definition">\n  \tloading {{ url }}\n  </div>\n\n  <div ng-if="definition">\n<coolform-container definition="definition">\n</coolform-container>\n  </div>\n</div>',field:'<div class="form-group" ng-class="{\'has-error\': !data.error.ok}" >\n\n  <label class="control-label" for="email">\n{{ field.label }}\n  </label>\n  \n  <div class="coolform-popover">\n<ng-switch on="field.type">\n  <coolform-text ng-switch-when="text" field="field" error="data.error"></coolform-text>\n</ng-switch>\n  </div>\n\n  <p class="help-block" ng-if="field.help">{{ field.help }}</p>\n\n  \x3c!-- <div ng-hide="data.error.ok" class="alert alert-danger">{{ data.error.msg }}</div> --\x3e\n    \n</div>',
header:'<div>\n<h4 class="text-muted">{{ header.title }}</h4>\n<div>{{ header.description }}</div>\n</div>',line:'<div ng-repeat="field in fields">\n  <div class="col-md-{{ field.size * 3 }}" >\n<coolform-field field="field" error="error"></coolform-field>\n  </div>\n</div>',submit:'<div class="well well-sm">\n<button ng-click="submit()" type="button" class="btn btn-success">{{ definition.submit }}</button>\n<button type="button" class="btn btn-warning">{{ definition.reset }}</button>\n</div>',text:'<input \ntype="{{ type }}" \nclass="form-control" \nplaceholder="{{ field.placeholder }}" \nng-model="value"/>'};
angular.module("CoolFormValidators",[]);angular.module("CoolFormServices",["CoolFormValidators"]);angular.module("CoolFormDirectives",["CoolFormServices"]);angular.module("CoolForm",["CoolFormDirectives","CoolFormServices"]);angular.module("CoolFormDirectives").directive("coolformContainer",function(){return{restrict:"E",scope:{definition:"="},template:templates.container}});angular.module("CoolForm").directive("coolform",function(definitionService,validatorService){var l;l=function(scope,elem,attr){scope.definition=
null;if(scope.url)scope.definition=definitionService(scope.url).then(function(definition){return scope.definition=definition.form});return scope.$watch("definition",function(v){if(!v.pages);else return validatorService(scope)})};return{restrict:"E",scope:{url:"@"},template:templates.controller,link:l,replace:true}});angular.module("CoolFormDirectives").directive("coolformField",function(){var l;l=function(scope,elem){var cfg,pop;scope.data={error:{ok:true,msg:null}};cfg={placement:"bottom",trigger:"manual",
container:"body",content:function(){return scope.data.error.msg}};pop=$(elem.contents()).children(".coolform-popover").popover(cfg);return scope.$watch("data.error",function(v){if(v.ok===true)return pop.popover("hide");else return pop.popover("show")})};return{restrict:"E",scope:{field:"="},template:templates.field,link:l}});angular.module("CoolFormDirectives").directive("coolformHeader",function(){return{restrict:"E",scope:{header:"="},template:templates.header}});angular.module("CoolFormDirectives").directive("coolformLine",
function(){var l;l=function(scope,elem,attr){var f,_i,_len,_ref,_results;_ref=scope.fields;_results=[];for(_i=0,_len=_ref.length;_i<_len;_i++){f=_ref[_i];if(!f.size)_results.push(f.size=1);else _results.push(void 0)}return _results};return{restrict:"E",scope:{fields:"="},template:templates.line,link:l}});angular.module("CoolFormDirectives").directive("coolformSubmit",function(submitService){var l;l=function(scope){return scope.submit=function(){return submitService(scope)}};return{restrict:"E",scope:{definition:"="},
template:templates.submit,link:l}});angular.module("CoolFormDirectives").directive("coolformText",function(valueService){var l;l=function(scope){var setType;valueService(scope,scope.field,"");setType=function(options){scope.type="text";if(options!=null&&(options.password!=null&&options.password===true))return scope.type="password"};return setType(scope.field.options)};return{restrict:"E",scope:{field:"=",error:"="},template:templates.text,link:l}});angular.module("CoolFormValidators").factory("validatorEmail",
function(){return function(name,values,rule){var p;p=/^([\w.-]+)@([\w.-]+)\.([a-zA-Z.]{2,6})$/i;if(values[name]&&values[name].match(p))return true;else return false}});angular.module("CoolFormValidators").factory("validatorMinSize",function(){return function(name,values,rule){if(values[name].length>=rule.options.size)return true;else return false}});angular.module("CoolFormValidators").factory("validatorNotBlank",function(){return function(name,values,rule){var v;v=values[name];if(v===void 0||v===
null)return false;if(v===true||v===false)return true;if(v&&!isNaN(v))return true;if(v&&v.replace(/^\s+|\s+$/g,"").length>0)return true;else return false}});angular.module("CoolFormValidators").factory("validatorSameAs",function(){return function(name,values,rule){if(values[name]===values[rule.field])return true;else return false}});angular.module("CoolFormValidators").factory("validators",function(validatorEmail,validatorMinSize,validatorNotBlank,validatorSameAs){var validators;validators={email:validatorEmail,
min_size:validatorMinSize,not_blank:validatorNotBlank,same_as:validatorSameAs};return validators});angular.module("CoolFormServices").factory("definitionService",function($q){return function(url){var deferred;deferred=$q.defer();$.getJSON(url,function(data){return deferred.resolve(data)});return deferred.promise}});angular.module("CoolFormServices").factory("submitService",function(){return function(scope){return scope.$emit("submit")}});angular.module("CoolFormServices").factory("validatorService",
function(validators){return function(scope){var dispatchResult,errors,fields,validateAll,validateField,values;fields={};values={};errors={};validateField=function(name){var field,rule,_i,_len,_ref;field=fields[name];if(field.validation!=null){_ref=field.validation;for(_i=0,_len=_ref.length;_i<_len;_i++){rule=_ref[_i];if(validators[rule.validator]!=null)if(validators[rule.validator](name,values,rule)===false){errors[name]=rule.options.message;dispatchResult(name,errors[name]);return rule.options.message}}}delete errors[name];
dispatchResult(name);return null};validateAll=function(){var f;for(f in fields)dispatchResult(f,validateField(f));if(errors.length!==0)return false;else return true};dispatchResult=function(name,result){var dest,ok;dest="validation_"+name;ok=result===null?true:false;return scope.$broadcast(dest,{"ok":ok,"msg":result})};scope.$on("register",function(event,field){event.stopPropagation();fields[field.name]=field;return values[field.name]=null});scope.$on("valueChange",function(event,data){event.stopPropagation();
values[data.name]=data.value;delete errors[data.name];return dispatchResult(data.name,null)});scope.$on("submit",function(event){event.stopPropagation();return validateAll()});return scope.$on("reset",function(event){})}});angular.module("CoolFormServices").factory("valueService",function(){return function(scope,field,defaultValue,onOk,onError){var reset;reset=function(){return scope.value=field.value!=null?field.value:defaultValue};scope.$watch("value",function(v,o){return scope.$emit("valueChange",
{name:field.name,value:scope.value})});scope.$on("validation_"+field.name,function(event,error){scope.error=error;if(error.ok===true&&onOk!=null)onOk();if(error.ok===false&&onError!=null)return onError()});reset();return scope.$emit("register",field)}})}).call(this);
