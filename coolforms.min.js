(function(){var templates;templates={container:'<form>\n  <div class="container-fluid">\n\n<div ng-if="definition.title || definition.description" class="row">\n  <h3 ng-if="definition.title">{{ definition.title }}</h3>\n  <div ng-if="definition.description" class="well well-sm">\n	{{ definition.description }}\n  </div>\n</div>\n\n<coolform-wizard ng-if="wizard" definition="definition" service="service">\n</coolform-wizard>\n\n<div ng-if="page">\n  <coolform-page page="page" service="service"></coolform-page>\n  <div class="row">\n	<coolform-submit definition="definition" service="service">\n	</coolform-submit>\n  </div>\n</div>	\n\n  </div>\n</form>',controller:'<div>\n  <div ng-if="!definition">\n  	loading {{ url }}\n  </div>\n\n  <div ng-if="definition">\n<coolform-container definition="definition" service="service">\n</coolform-container>\n  </div>\n</div>',field:'<div class="form-group" ng-class="{\'has-error\': error}" >\n\n  <label class="control-label" for="email">\n{{ field.label }}\n  </label>\n  \n  <div class="coolform-popover">\n<ng-switch on="field.type">\n  <coolform-text ng-switch-when="text" field="field" service="service"></coolform-text>\n</ng-switch>\n  </div>\n  \n  <p ng-show="error" class="help-block">{{ error }}</p>\n  <p ng-hide="error" class="help-block" ng-if="field.help">{{ field.help }}</p>\n    \n</div>',header:'<div>\n<h4 class="text-muted">{{ header.title }}</h4>\n<div>{{ header.description }}</div>\n</div>',line:'<div ng-repeat="field in fields">\n  <div class="col-md-{{ field.size * 3 }}" >\n<coolform-field \n   field="field" \n   service="service">\n</coolform-field>\n  </div>\n</div>',page:'<div ng-if="page.title || page.description" class="row">\n<h4 ng-if="page.title" class="text-primary">{{ page.title }}</h4>\n<div ng-if="page.description">{{ page.description }}</div>\n</div>\n\n<div class="row" ng-repeat="line in page.lines">\n<coolform-header ng-if="line.header" header="line.header"></coolform-header>\n<coolform-line \n	 ng-if="line.fields" \n	 fields="line.fields" \n	 service="service">\n</coolform-line>\n</div>',submit:'<div class="well well-sm">\n  <button \n ng-click="submit()" \n type="button" \n class="btn btn-primary">\n{{ definition.submit }}\n  </button>\n  <button \n type="button" \n class="btn btn-default">\n{{ definition.reset }}\n  </button>\n</div>',text:'<input \ntype="{{ type }}" \nclass="form-control" \nplaceholder="{{ field.placeholder }}" \nng-model="value"/>',wizard:'<div class="row">\n  <ul class="nav nav-tabs">\n<li ng-repeat="page in definition.pages" ng-class="{active: isCurrent($index)}">\n  <a ng-click="moveTo($index)"\n	 ng-class="{\'text-danger\': errorsOnPage($index)}"\n	 href="">\n	{{ page.title }}\n  </a>\n<li>\n  </ul>\n</div>\n\n<div ng-repeat="page in definition.pages">\n  <coolform-page ng-show="isCurrent($index)" page="page" service="service">\n  </coolform-page>\n</div>\n\n<div ng-hide="isLast()" class="well well-sm">\n  <button ng-click="moveToNext()" \n	  type="button"\n	  class="btn btn-primary"\n	  ng-class="{disabled: errorsOnPage(current)}">\n<span class="glyphicon glyphicon-arrow-right"></span>\n{{ nextTitle() }}\n  </button>\n</div>\n\n<coolform-submit ng-show="isLast()" service="service" definition="definition">\n</coolform-submit>'};angular.module("CoolFormValidators",[]);angular.module("CoolFormServices",["CoolFormValidators"]);angular.module("CoolFormDirectives",["CoolFormServices"]);angular.module("CoolForm",["CoolFormDirectives","CoolFormServices"]);angular.module("CoolFormDirectives").directive("coolformContainer",function(){var l;l=function(scope){return scope.$watch("definition",function(v){if(!v.pages){return}if(v.pages.length>1){return scope.wizard=true}else{return scope.page=scope.definition.pages[0]}})};return{restrict:"E",scope:{definition:"=",service:"="},template:templates.container,link:l}});angular.module("CoolForm").directive("coolform",function(definitionService,registrationService){var l;l=function(scope,elem,attr){if(scope.url!=null){scope.definition=definitionService(scope.url).then(function(definition){return scope.definition=definition.form})}else{if(scope.form!=null){scope.definition=scope.form.form;console.log(scope.form)}}return scope.$watch("form",function(v){if(v!=null&&v.form!=null){scope.definition=scope.form.form;scope.service=registrationService();return scope.service.registerController(scope,scope.definition)}})};return{restrict:"E",scope:{url:"@?",form:"=?"},template:templates.controller,link:l,replace:true}});angular.module("CoolFormDirectives").directive("coolformField",function(){var l;l=function(scope){scope.error=false;return scope.service.watchFieldValidation(scope.field.name,function(){return scope.error=false},function(e){return scope.error=e})};return{restrict:"E",scope:{field:"=",service:"="},template:templates.field,link:l}});angular.module("CoolFormDirectives").directive("coolformHeader",function(){return{restrict:"E",scope:{header:"="},template:templates.header}});angular.module("CoolFormDirectives").directive("coolformLine",function(){var l;l=function(scope,elem,attr){var f,_i,_len,_ref,_results;_ref=scope.fields;_results=[];for(_i=0,_len=_ref.length;_i<_len;_i++){f=_ref[_i];if(!f.size){_results.push(f.size=1)}else{_results.push(void 0)}}return _results};return{restrict:"E",scope:{fields:"=",service:"="},template:templates.line,link:l}});angular.module("CoolFormDirectives").directive("coolformPage",function(){return{restrict:"E",scope:{page:"=",service:"="},template:templates.page}});angular.module("CoolFormDirectives").directive("coolformSubmit",function(){var l;l=function(scope){return scope.submit=function(){return scope.service.validateAllFields()}};return{restrict:"E",scope:{definition:"=",service:"="},template:templates.submit,link:l}});angular.module("CoolFormDirectives").directive("coolformText",function(){var l;l=function(scope){var onChange,setType;onChange=scope.service.registerField(scope.field.name);scope.value=scope.field.value?value:"";scope.$watch("value",function(v,o){return onChange(v)});setType=function(options){scope.type="text";if(options!=null&&options.password!=null&&options.password===true){return scope.type="password"}};return setType(scope.field.options)};return{restrict:"E",scope:{field:"=",service:"="},template:templates.text,link:l}});angular.module("CoolFormDirectives").directive("coolformWizard",function(){var l;l=function(scope){var field,line,p,page,pageFields,validatePage,watchField,_i,_j,_k,_len,_len1,_len2,_ref,_ref1,_ref2,_results;scope.current=0;validatePage=function(p){return scope.service.validateFields(pageFields[p])};scope.moveTo=function(index){if(validatePage(scope.current)===true){return scope.current=index}};scope.moveToNext=function(){return scope.moveTo(scope.current+1)};scope.isCurrent=function(index){if(scope.current===index){return true}else{return false}};scope.isLast=function(){if(scope.current===scope.definition.pages.length-1){return true}else{return false}};scope.nextTitle=function(){if(scope.current+1<scope.definition.pages.length){return scope.definition.pages[scope.current+1].title}};scope.errorsOnPage=function(p){return!$.isEmptyObject(scope.errors[p])};watchField=function(page,fieldName){return scope.service.watchFieldValidation(fieldName,function(){return delete scope.errors[page][fieldName]},function(e){return scope.errors[page][fieldName]=e})};scope.errors=[];pageFields=[];p=0;_ref=scope.definition.pages;_results=[];for(_i=0,_len=_ref.length;_i<_len;_i++){page=_ref[_i];scope.errors[p]={};pageFields[p]=[];_ref1=page.lines;for(_j=0,_len1=_ref1.length;_j<_len1;_j++){line=_ref1[_j];_ref2=line.fields;for(_k=0,_len2=_ref2.length;_k<_len2;_k++){field=_ref2[_k];pageFields[p].push(field.name);watchField(p,field.name)}}_results.push(p+=1)}return _results};return{restrict:"E",scope:{definition:"=",service:"="},template:templates.wizard,link:l}});angular.module("CoolFormValidators").factory("validatorEmail",function(){return function(name,values,rule){var p;p=/^([\w.-]+)@([\w.-]+)\.([a-zA-Z.]{2,6})$/i;if(values[name]&&values[name].match(p)){return true}else{return false}}});angular.module("CoolFormValidators").factory("validatorMinSize",function(){return function(name,values,rule){if(values[name].length>=rule.options.size){return true}else{return false}}});angular.module("CoolFormValidators").factory("validatorNotBlank",function(){return function(name,values,rule){var v;v=values[name];if(v===void 0||v===null){return false}if(v===true||v===false){return true}if(v&&!isNaN(v)){return true}if(v&&v.replace(/^\s+|\s+$/g,"").length>0){return true}else{return false}}});angular.module("CoolFormValidators").factory("validatorSameAs",function(){return function(name,values,rule){if(values[name]===values[rule.options.field]){return true}else{return false}}});angular.module("CoolFormValidators").factory("validators",function(validatorEmail,validatorMinSize,validatorNotBlank,validatorSameAs){var validators;validators={email:validatorEmail,min_size:validatorMinSize,not_blank:validatorNotBlank,same_as:validatorSameAs};return validators});angular.module("CoolFormServices").factory("definitionService",function($q){return function(url){var deferred;deferred=$q.defer();$.getJSON(url,function(data){return deferred.resolve(data)});return deferred.promise}});angular.module("CoolFormServices").factory("registrationService",function(validators){return function(){var addHandler,errorHandlers,errors,fields,okHandlers,registerController,registerField,removeError,sendError,sendOk,services,setFields,validateAllFields,validateField,validateFields,valueChange,values,watchFieldValidation;fields={};errors={};values={};errorHandlers={};okHandlers={};setFields=function(pages){var field,line,p,page,_i,_j,_k,_len,_len1,_len2,_ref,_ref1,_results;p=0;_results=[];for(_i=0,_len=pages.length;_i<_len;_i++){page=pages[_i];_ref=page.lines;for(_j=0,_len1=_ref.length;_j<_len1;_j++){line=_ref[_j];_ref1=line.fields;for(_k=0,_len2=_ref1.length;_k<_len2;_k++){field=_ref1[_k];fields[field.name]=field}}_results.push(p+=1)}return _results};sendError=function(fieldName,error){var handler,_i,_len,_ref,_results;if(errorHandlers[fieldName]==null){return}_ref=errorHandlers[fieldName];_results=[];for(_i=0,_len=_ref.length;_i<_len;_i++){handler=_ref[_i];_results.push(handler(error))}return _results};sendOk=function(fieldName){var handler,_i,_len,_ref,_results;if(okHandlers[fieldName]==null){return}_ref=okHandlers[fieldName];_results=[];for(_i=0,_len=_ref.length;_i<_len;_i++){handler=_ref[_i];_results.push(handler())}return _results};removeError=function(fieldName){delete errors[fieldName];return sendOk(fieldName)};validateField=function(fieldName){var field,rule,_i,_len,_ref;field=fields[fieldName];if(field.validation!=null){_ref=field.validation;for(_i=0,_len=_ref.length;_i<_len;_i++){rule=_ref[_i];if(validators[rule.validator]!=null){if(validators[rule.validator](fieldName,values,rule)===false){errors[fieldName]=rule.options.message;sendError(fieldName,rule.options.message);return false}}}}removeError(fieldName);return true};validateFields=function(fieldList){var field,result,_i,_len;result=true;for(_i=0,_len=fieldList.length;_i<_len;_i++){field=fieldList[_i];if(validateField(field)===false){result=false}}return result};validateAllFields=function(){return validateFields(Object.keys(fields))};valueChange=function(fieldName,value){values[fieldName]=value;return removeError(fieldName)};addHandler=function(field,fn,list){if(list[field]==null){list[field]=[]}if(fn!=null){return list[field].push(fn)}};registerController=function(controllerScope,form){return setFields(form.pages)};watchFieldValidation=function(fieldName,onOk,onError){if(onOk!=null){addHandler(fieldName,onOk,okHandlers)}if(onError!=null){return addHandler(fieldName,onError,errorHandlers)}};registerField=function(fieldName,onOk,onError){watchFieldValidation(fieldName,onOk,onError);return function(value){return valueChange(fieldName,value)}};services={registerController:registerController,registerField:registerField,validateField:validateField,validateFields:validateFields,validateAllFields:validateAllFields,watchFieldValidation:watchFieldValidation};return services}})}).call(this);