(function(){var templates;templates={container:'<form>\n  <div class="container">\n\n<div ng-if="definition.title || definition.description" class="row">\n  <h3 ng-if="definition.title">{{ definition.title }}</h3>\n  <div ng-if="definition.description" class="well well-sm">{{ definition.description }}</div>\n</div>\n\n<div ng-repeat="page in definition.pages">\n  \n  <div ng-if="page.title || page.description" class="row">\n\t<h4 ng-if="page.title" class="text-primary">{{ page.title }}</h4>\n\t<div ng-if="page.description">{{ page.description }}</div>\n  </div>\n\n  <div class="row" ng-repeat="line in page.lines">\n\t<coolform-header ng-if="line.header" header="line.header"></coolform-header>\n\t<coolform-line ng-if="line.fields" fields="line.fields"></coolform-line>\n  </div>\n\n</div>\n\n<div class="row">\n  <div class="well well-sm">\n\t<button type="button" class="btn btn-success">{{ definition.submit }}</button>\n\t<button type="button" class="btn btn-warning">{{ definition.reset }}</button>\n  </div>\n</div>\n\n  </div>\n</form>',
controller:'<div>\n  <div ng-if="!definition">\n  \tloading {{ url }}\n  </div>\n\n  <div ng-if="definition">\n<coolform-container definition="definition">\n</coolform-container>\n  </div>\n</div>',email:'<input \ntype="email" \nclass="form-control" \nplaceholder="{{ field.placeholder }}" \nng-model="value"/>',header:'<div>\n<h4 class="text-muted">{{ header.title }}</h4>\n<div>{{ header.description }}</div>\n</div>',line:'<div ng-repeat="field in fields">\n  <div class="col-md-{{ field.size * 3 }}" >\n<div class="form-group">\n  \n  <label for="email">\n\t{{ field.label }}\n  </label>\n\n  <ng-switch on="field.type">\n\t<coolform-email ng-switch-when="email" field="field" ></coolform-email>\n\t<coolform-password ng-switch-when="password" field="field" ></coolform-password>\n\t<coolform-text ng-switch-when="text" field="field" ></coolform-text>\n  </ng-switch>\n\n  <p class="help-block" ng-if="field.help">{{ field.help }}</p>\n  \n</div>\n  </div>\n</div>',
password:'<input \ntype="password" \nclass="form-control" \nplaceholder="{{ field.placeholder }}" \nng-model="value"/>',text:'<input \ntype="text" \nclass="form-control" \nplaceholder="{{ field.placeholder }}" \nng-model="value"/>'};angular.module("CoolFormContainer",["CoolFormLine","CoolFormHeader"]).directive("coolformContainer",function(){return{restrict:"E",scope:{definition:"="},template:templates.container}});angular.module("CoolFormDefinitionResolver",[]).factory("DefinitionResolver",function($q){return function(url){var deferred;
deferred=$q.defer();$.getJSON(url,function(data){return deferred.resolve(data)});return deferred.promise}});angular.module("CoolForm",["CoolFormContainer","CoolFormDefinitionResolver"]).directive("coolform",function(DefinitionResolver){var l;l=function(scope,elem,attr){var make_data;scope.definition=null;if(scope.url)scope.definition=DefinitionResolver(scope.url).then(function(definition){return scope.definition=definition.form});make_data=function(sections){var errors,field,line,section,values,_i,
_j,_k,_len,_len1,_len2,_ref,_ref1;values={};errors={};for(_i=0,_len=sections.length;_i<_len;_i++){section=sections[_i];_ref=section.lines;for(_j=0,_len1=_ref.length;_j<_len1;_j++){line=_ref[_j];_ref1=line.fields;for(_k=0,_len2=_ref1.length;_k<_len2;_k++){field=_ref1[_k];if(field.value!=null)values[field.name]=field.value;else values[field.name]=null;errors[field.name]=null}}}scope.data={values:values,errors:errors};return console.log(scope.data)};return scope.$watch("definition",function(v){if(!v.sections);
else return make_data(v.sections)})};return{restrict:"E",scope:{url:"@"},template:templates.controller,link:l,replace:true}});angular.module("CoolFormEmail",[]).directive("coolformEmail",function(){var l;l=function(scope){};return{restrict:"E",scope:{field:"="},template:templates.email,link:l}});angular.module("CoolFormHeader",[]).directive("coolformHeader",function(){return{restrict:"E",scope:{header:"="},template:templates.header}});angular.module("CoolFormLine",["CoolFormEmail","CoolFormPassword",
"CoolFormText"]).directive("coolformLine",function(){var l;l=function(scope,elem,attr){var f,_i,_len,_ref,_results;_ref=scope.fields;_results=[];for(_i=0,_len=_ref.length;_i<_len;_i++){f=_ref[_i];if(!f.size)_results.push(f.size=1);else _results.push(void 0)}return _results};return{restrict:"E",scope:{fields:"="},template:templates.line,link:l}});angular.module("CoolFormPassword",[]).directive("coolformPassword",function(){var l;l=function(scope){};return{restrict:"E",scope:{field:"="},template:templates.password,
link:l}});angular.module("CoolFormText",["CoolFormValueService"]).directive("coolformText",function(valueService){var l;l=function(scope){scope.value=scope.field.value!=null?scope.field.value:"";return valueService(scope,scope.field)};return{restrict:"E",scope:{field:"="},template:templates.text,link:l}});angular.module("CoolFormValueService",[]).factory("valueService",function(){return function(scope,field,onOk,onError){scope.$emit("register",field);scope.$watch("value",function(v,o){if(v===o)return;
return scope.$emit("valueChange",{name:field.name,value:scope.value})});return scope.$on("validation",function(event,args){event.stopPropagation();if(args.ok){scope.error=false;if(onOk!=null)return onOk()}else{scope.error=args.msg;if(onError)return onError(args.msg)}})}});angular.module("CoolFormValidatorService",[]).factory("validationService",function(){})}).call(this);
