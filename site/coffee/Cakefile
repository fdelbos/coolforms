# cool cakefile from: https://gist.github.com/jrmoran/1537200

fs            = require 'fs'
{exec, spawn} = require 'child_process'

# order of files in `inFiles` is important
config =
  srcDir:  './'
  outDir:  '../.'
  inFiles: [
    'app'
    ]
  outFile: 'app'

outJS    = "#{config.outDir}/#{config.outFile}"
strFiles = ("#{config.srcDir}/#{file}.coffee" for file in config.inFiles).join ' '
compiler = "~/bin/compiler.jar"

# deal with errors from child processes
exerr  = (err, sout,  serr)->
  process.stdout.write err  if err
  process.stdout.write sout if sout
  process.stdout.write serr if serr

task 'watch', 'watch and compile changes in source dir', ->
  watch = exec "coffee -j #{outJS}.js -cw #{strFiles}"
  watch.stdout.on 'data', (data)-> process.stdout.write data

task 'build', 'join and compile *.coffee files', ->
  build = exec "coffee -j #{outJS}.js -c #{strFiles}", exerr

task 'min', 'compile and minifiy with google closure', ->
  min = exec "java -jar #{compiler} --js #{outJS}.js --js_output_file #{outJS}.min.js; mv #{outJS}.min.js #{outJS}.js", exerr
